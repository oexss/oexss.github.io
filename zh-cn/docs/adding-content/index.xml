<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>内容自定义 on Tommas</title><link>https://t.is-local.org/zh-cn/docs/adding-content/</link><description>Recent content in 内容自定义 on Tommas</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://t.is-local.org/zh-cn/docs/adding-content/index.xml" rel="self" type="application/rss+xml"/><item><title>添加内容</title><link>https://t.is-local.org/zh-cn/docs/adding-content/content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/content/</guid><description>​ 现在你有了一个带有 Docsy 的新 Hugo 站点，是时候添加一些内容了！本页面告诉你如何使用主题来添加和组织站点内容。
内容根目录 ​ 你可以在你的 Hugo 站点项目的内容根目录下添加站点内容 - 即 content/ 或语言特定的根目录，比如 content/en/。这里的主要例外是你不想构建到站点中的静态文件：你可以在下面的添加静态内容中了解更多关于添加这些文件的位置。你的内容根目录中的文件通常按照站点章节和模板分组到子目录中，我们将在内容章节和模板中查看这些子目录。
​ 你可以在目录结构解释中了解有关 Hugo 目录结构的更多信息。
内容章节和模板 ​ Hugo 使用你提供的内容文件和站点主题提供的任何模板来构建你的站点页面。这些模板（在 Hugo 术语中称为&amp;quot;layouts（布局）&amp;quot;）包括你的页面的页眉、页脚、导航和样式表链接：基本上除了页面的具体内容以外的一切。这些模板又可以由局部组成：用于页面元素（如页眉、搜索框等）的小型可重用 HTML 片段。
​ 因为大多数技术文档站点有不同的章节来存放不同类型的内容，Docsy 主题提供了以下顶级站点章节的模板：
docs 用于你站点的文档章节的页面。 blog 用于你站点的博客页面。 community 用于你站点的社区页面。 ​ 它还提供了一种默认的&amp;quot;着陆页&amp;quot;模板类型，带有站点页眉和页脚，但没有左侧导航，你可以用它来作为任何其他章节的模板。在这个站点和我们的示例站点中，它用于站点主页和About页面。
​ 你站点中的每个顶级章节都对应着站点内容根目录中的一个目录。根据内容所在的文件夹，Hugo 自动应用适当的模板来渲染该章节。例如，此页面位于站点内容根目录 content/en/ 的 docs 子目录中，因此 Hugo 自动应用 docs 模板。你可以通过显式指定特定页面的模板或内容类型来覆盖此行为。
​ 如果你复制了示例站点，则已经拥有适当命名的顶级章节目录来使用 Docsy 的模板，每个目录都有一个索引页面（ _index.md 或 index.html）供用户访问。这些顶级章节也会出现在示例站点的顶级菜单中。
自定义章节 ​ 如果您复制了示例站点，但并不想使用提供的任何内容章节之一，只需删除相应的内容子目录即可。同样，如果您想添加一个顶级章节，只需添加一个新的子目录，但如果您想使用除默认模板之外的任何现有Docsy模板，则需要在每个页面的frontmatter中明确指定布局或内容类型。例如，如果您创建一个新目录content/en/amazing，并且希望该自定义章节中的一个或多个页面使用Docsy的docs模板，则在每个页面的前置元数据中添加type: docs：
Front matter: toml yaml json +++ title = &amp;#34;My amazing new section&amp;#34; weight = 1 type = &amp;#34;docs&amp;#34; description = &amp;#39;&amp;#39;&amp;#39; A special section with a docs layout.</description></item><item><title>颜色与字体</title><link>https://t.is-local.org/zh-cn/docs/adding-content/lookandfeel/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/lookandfeel/</guid><description>​	默认情况下，使用 Docsy 的站点具有主题的默认字体、颜色和一般外观和感受。然而，如果您想要自己的颜色方案（您可能会想要！），您可以使用自己项目特定的值非常容易地覆盖主题默认值——Hugo 在查找构建您的站点的信息时将首先查找您的项目文件。并且，由于 Docsy 使用 Bootstrap 4 和 SCSS 进行样式化，您可以在其特殊的 SCSS 项目变量文件中仅覆盖单个值（如项目颜色和字体），或通过创建自己的样式进行更进一步的定制。
​	Docsy 还提供了使用 Chroma 或 Prism 进行高亮显示代码块的选项。
项目样式文件 ​	要自定义项目的外观和感受，请创建以下任一 Docsy 占位符文件的您自己的版本（注意下划线后缀 _project.scss）：
assets/scss/_variables_project.scss 是您添加项目特定的主题变量定义（如站点颜色）以及您想要设置的任何其他 Bootstrap 变量值的地方。您可以在 assets/scss/_variables.scss 中找到 Docsy 主题变量及其默认值的列表。有关其他 Bootstrap 4 变量的信息，请参见变量默认值和 Bootstrap 的 v4-dev/scss/_variables.scss 文件。 assets/scss/_styles_project.scss 是您可以添加自己的自定义 SCSS 样式的地方，包括覆盖 Docsy 主题 SCSS 文件中的任何样式。 Tip 在服务器模式下运行时未启用 PostCSS（CSS 浏览器前缀自动添加）（速度较慢），因此 Chrome 是推荐的开发选择。 颜色和主题颜色 站点颜色 要自定义站点的颜色，请将 SCSS 变量覆盖添加到**&amp;lsquo;assets/scss/_variables_project.scss&amp;rsquo;**。例如，您可以设置主和辅助站点颜色如下：
$primary: #390040; $secondary: #a23b72; Docsy 具有 Bootstrap 功能，例如渐变背景（&amp;rsquo;$enable-gradients&amp;rsquo;） 和阴影 （&amp;rsquo;$enable-shadows&amp;rsquo;） 默认启用。这些也可以通过将变量设置为&amp;rsquo;假&amp;rsquo;。</description></item><item><title>导航和菜单</title><link>https://t.is-local.org/zh-cn/docs/adding-content/navigation/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/navigation/</guid><description>Docsy为您的网站提供了多种内置导航功能，包括网站菜单、分区菜单和页面菜单。本页向您展示它们的工作原理，以及如何配置和自定义它们以满足您的需求。
顶层菜单 ​	顶层菜单（出现在整个站点的顶部导航栏中）使用您站点的主菜单（main menu）。所有的 Hugo 站点都有一个主菜单（main menu）项数组，可以通过 .Site.Menus 站点变量进行访问，通过页面前置元数据或您站点的 hugo.toml/hugo.yaml/hugo.json 进行填充。
​	要将页面或章节添加到此菜单中，请将其添加到站点的主菜单（main menu）中，无论是在 hugo.toml/hugo.yaml/hugo.json 中还是在目标页面的前置元数据中（在 _index.md 或_index.html 中作为章节着陆页面）。例如，这里是我们如何将 Documentation 章节着陆页添加到该站点的主菜单中的示例：
Front matter: toml yaml json +++ title = &amp;#34;Welcome to Docsy&amp;#34; linkTitle = &amp;#34;Documentation&amp;#34; [menu.main] weight = 20 pre = &amp;#34;&amp;lt;i class=&amp;#39;fa-solid fa-book&amp;#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;#34; +++ --- title: &amp;#34;Welcome to Docsy&amp;#34; linkTitle: &amp;#34;Documentation&amp;#34; menu: main: weight: 20 pre: &amp;lt;i class=&amp;#39;fa-solid fa-book&amp;#39;&amp;gt;&amp;lt;/i&amp;gt; --- { &amp;#34;title&amp;#34;: &amp;#34;Welcome to Docsy&amp;#34;, &amp;#34;linkTitle&amp;#34;: &amp;#34;Documentation&amp;#34;, &amp;#34;menu&amp;#34;: { &amp;#34;main&amp;#34;: { &amp;#34;weight&amp;#34;: 20, &amp;#34;pre&amp;#34;: &amp;#34;&amp;lt;i class=&amp;#39;fa-solid fa-book&amp;#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;#34; } } } ​	该菜单按页面weight从左到右排序。例如，页面weight: 30 的章节索引或页面将出现在菜单中的 Documentation 章节之后，而weight: 10的页面将出现在它之前。</description></item><item><title>搜索</title><link>https://t.is-local.org/zh-cn/docs/adding-content/search/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/search/</guid><description>Docsy 提供了多种选项，让您的读者搜索您的网站内容，因此您可以选择适合您需求的选项。您可以选择：
[Google 自定义搜索引擎]（#configure-search-with-a-google-custom-search-engine） （GCSE），默认选项，它使用 Google 对您的公共网站的索引来生成搜索结果页面。 [Algolia DocSearch]（#algolia-docsearch），它使用 Algolia 的索引和搜索机制。搜索结果显示为弹出窗口。Algolia DocSearch 对公共文档网站免费。 [使用 Lunr 进行本地搜索]（#local-search-with-lunr），它使用 Javascript 索引和搜索您的站点，而无需连接到外部服务。此选项不要求您的网站是公开的。 如果在项目 configuration file 中启用这些搜索选项中的任何一个，则顶部导航栏右侧会显示一个搜索框。默认情况下，搜索框还会显示在左侧导航窗格中部分菜单的顶部，如果您愿意，或者如果您使用的搜索选项仅适用于顶部搜索框，则可以禁用该搜索框。
You can only enable a single search option at a time 如果您不小心在项目中启用了多个搜索选项配置文件，您将在构建时收到警告，并且未确定为您的网站提供服务时的行为。 禁用侧边栏搜索框 默认情况下，搜索框同时显示在顶部导航栏和侧边栏左侧导航窗格的顶部。如果您不想要侧边栏搜索框，请在 &amp;lsquo;hugo.toml&amp;rsquo;/&amp;lsquo;hugo.yaml&amp;rsquo;/&amp;lsquo;hugo.json&amp;rsquo; 中将站点参数 &amp;lsquo;sidebar_search_disable&amp;rsquo; 设置为 &amp;rsquo;true&amp;rsquo;：
Configuration file: hugo.toml hugo.yaml hugo.json [params.ui] sidebar_search_disable = true params: ui: sidebar_search_disable: true { &amp;#34;params&amp;#34;: { &amp;#34;ui&amp;#34;: { &amp;#34;sidebar_search_disable&amp;#34;: true } } } 使用 Google 自定义搜索引擎配置搜索 默认情况下，Docsy 使用 [Google 自定义搜索引擎]（https://cse.</description></item><item><title>文档版本控制</title><link>https://t.is-local.org/zh-cn/docs/adding-content/versioning/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/versioning/</guid><description>​	根据您的项目的发布和版本控制，您可能希望让用户访问您的文档的先前版本。如何部署先前的版本取决于您。本页面介绍了 Docsy 中可用的功能，可用于在不同版本的文档之间提供导航，并在归档站点上显示信息横幅。
添加版本下拉菜单 ​	如果在 hugo.toml/hugo.yaml/hugo.json 中添加一些 [params.versions]，Docsy 主题将在顶级菜单中添加版本选择器下拉菜单。您可以指定每个版本的 URL 和名称，如下面的示例所示：
Configuration file: hugo.toml hugo.yaml hugo.json # Add your release versions here [[params.versions]] version = &amp;#34;master&amp;#34; url = &amp;#34;https://master.kubeflow.org&amp;#34; [[params.versions]] version = &amp;#34;v0.2&amp;#34; url = &amp;#34;https://v0-2.kubeflow.org&amp;#34; [[params.versions]] version = &amp;#34;v0.3&amp;#34; url = &amp;#34;https://v0-3.kubeflow.org&amp;#34; params: versions: - version: master url: &amp;#39;https://master.kubeflow.org&amp;#39; - version: v0.2 url: &amp;#39;https://v0-2.kubeflow.org&amp;#39; - version: v0.3 url: &amp;#39;https://v0-3.kubeflow.org&amp;#39; { &amp;#34;params&amp;#34;: { &amp;#34;versions&amp;#34;: [ { &amp;#34;version&amp;#34;: &amp;#34;master&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;https://master.</description></item><item><title>Docsy简码</title><link>https://t.is-local.org/zh-cn/docs/adding-content/shortcodes/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/shortcodes/</guid><description>​使用Docsy的Hugo简码快速构建站点页面。
​ Hugo 允许你定义并使用 shortcodes，而不是从头编写所有站点页面。这些可重复使用的内容片段可以包含在你的页面中，通常使用 HTML 创建难以或不可能在简单的 Markdown 中实现的效果。简码还可以具有参数，例如，让你向花哨的简码文本框中添加自己的文本。除了 Hugo 的内置简码外，Docsy 还提供了一些自己的 简码，以帮助你构建页面。
简码分隔符 ​ 如下所示，使用花括号样式的简码分隔符\{\{\&amp;lt;...\&amp;gt;\}\}告诉Hugo内部内容是HTML/纯文本，无需进一步处理。通过使用分隔符\{\{\%...\%\}\}，Hugo将把简码body视为Markdown。您可以在页面中使用这两种样式。
简码块 ​ 本主题附带一组自定义页面块（Page Block ）简码，可用于组合着陆页面、About页面等。
​ 这些块共享一些通用参数：
height
块容器的预定义高度。可以是 min、med、max、full 或 auto 中的一个。将其设置为 full 将填充视口高度，这对于着陆页非常有用。
color
如果未提供，块将被分配一个主题调色板的颜色，但如果需要，您可以设置自己的颜色。您可以使用所有 Bootstrap 的颜色名称、主题颜色名称或灰度阴影。一些例子包括 primary、white、dark、warning、light、success、300、blue、orange。这将成为块的背景颜色，但文本颜色将适应以获得适当的对比度。
blocks/cover ​ blocks/cover简码创建填充页面顶部的着陆页类型块。
\{\{\&amp;lt; blocks/cover title=&amp;#34;Welcome!&amp;#34; image_anchor=&amp;#34;center&amp;#34; height=&amp;#34;full&amp;#34; color=&amp;#34;primary&amp;#34; \&amp;gt;\}\} &amp;lt;div class=&amp;#34;mx-auto&amp;#34;&amp;gt; &amp;lt;a class=&amp;#34;btn btn-lg btn-primary me-3 mb-4&amp;#34; href=&amp;#34;\{\{\&amp;lt; relref &amp;#34;/docs&amp;#34; \&amp;gt;\}\}&amp;#34;&amp;gt; Learn More &amp;lt;i class=&amp;#34;fa-solid fa-circle-right ms-2&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;a class=&amp;#34;btn btn-lg btn-secondary me-3 mb-4&amp;#34; href=&amp;#34;https://example.</description></item><item><title>Logo和图片</title><link>https://t.is-local.org/zh-cn/docs/adding-content/iconsimages/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/iconsimages/</guid><description>添加您的logo ​	默认情况下，Docsy在导航栏的开头即极左处显示一个站点logo。将您的项目的SVG logo放在assets/icons/logo.svg中。这将覆盖主题中默认的Docsy logo。
​	如果您不希望在导航栏中出现logo，则在您的项目配置中将navbar_logo设置为false：
Configuration file: hugo.toml hugo.yaml hugo.json [params.ui] navbar_logo = false params: ui: navbar_logo: false { &amp;#34;params&amp;#34;: { &amp;#34;ui&amp;#34;: { &amp;#34;navbar_logo&amp;#34;: false } } } ​	有关样式化您的logo的信息，请参见样式化您的项目logo和名称。
使用 icons ​	Docsy 默认包含了免费的 FontAwesome 图标，其中包括 GitHub 和 Stack Overflow 等网站的logo。您可以在 FontAwesome 文档 中查看所有可用的图标，包括 FontAwesome 版本以及该图标是否可供免费使用。检查 Docsy 的 package.json 和发行说明，了解 Docsy 当前包含的 FontAwesome 版本。
​	您可以在 顶级菜单、章节菜单 或文本的任何位置添加 FontAwesome 图标。
添加您的favicon ​	最简单的方法是通过 http://cthedot.de/icongen（允许您从单个图像创建各种图标大小和选项）和/或 https://favicon.io 来创建一组网站图标，然后将它们放在站点项目的 static/favicons 目录中。这将覆盖本主题的默认图标。</description></item><item><title>打印支持</title><link>https://t.is-local.org/zh-cn/docs/adding-content/print/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/print/</guid><description>​	大多数浏览器中的个别文档页面都可以很好地打印，因为布局已经被设计成从打印输出中省略导航界面。
​	在一些站点上，启用&amp;quot;打印整个章节&amp;quot;功能可能很有用（就像在本用户指南中所看到的）。选择此选项将使用适合打印的格式呈现当前顶级章节（例如此页面的Content 和Customization）的所有子页面和子章节，并附带该章节的目录。
​	要启用此功能，请在站点的hugo.toml/hugo.yaml/hugo.json文件中为&amp;quot;section&amp;quot;类型添加&amp;quot;print&amp;quot;输出格式：
Configuration file: hugo.toml hugo.yaml hugo.json [outputs] section = [ &amp;#34;HTML&amp;#34;, &amp;#34;RSS&amp;#34;, &amp;#34;print&amp;#34; ] outputs: section: - HTML - RSS - print { &amp;#34;outputs&amp;#34;: { &amp;#34;section&amp;#34;: [ &amp;#34;HTML&amp;#34;, &amp;#34;RSS&amp;#34;, &amp;#34;print&amp;#34; ] } } 然后，站点应在右侧导航中显示一个&amp;quot;打印整个章节&amp;quot;的链接。
进一步的定制 禁用目录 ​	要在可打印视图中禁用目录，请在页面前置元数据或hugo.toml/hugo.yaml/hugo.json中将disable_toc参数设置为true：
Front matter: toml yaml json +++ … disable_toc = true … +++ --- … disable_toc: true … --- { …, &amp;#34;disable_toc&amp;#34;: true, … } Config file: hugo.</description></item><item><title>分析、用户反馈和SEO</title><link>https://t.is-local.org/zh-cn/docs/adding-content/feedback/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/feedback/</guid><description>添加分析 ​ Docsy 主题基于 Hugo 对 Google Analytics 的支持，Hugo 通过 内部模板 提供支持。一旦您按照下面的说明设置了分析，您的网站使用信息（如页面浏览量）将发送到您的 Google Analytics 账户。
先决条件 ​ 在继续之前，您需要为您的网站获取一个 分析 ID（技术上称为测量 ID 或属性 ID，但在本指南中我们将使用&amp;quot;analytics ID（分析 ID）&amp;ldquo;这个术语）。如果您还没有分析 ID，请参见 介绍 Google Analytics 4 (GA4) 的 入门指南 部分。
Tip Your project&amp;rsquo;s analytics ID is a string that starts with G- (a GA4 measurement ID) or UA- (a universal analytics property ID). 设置 ​ 通过将项目的分析 ID 添加到站点配置文件中来启用 Google Analytics。有关详细信息，请参见Is services.googleAnalytics.id an alias for googleAnalytics.
Production-only feature!</description></item><item><title>代码库链接及其页面信息</title><link>https://t.is-local.org/zh-cn/docs/adding-content/repository-links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/repository-links/</guid><description>​	Docsy 文档和博客布局 包括让读者可以通过您的网站源代码仓库编辑页面或为您的文档或项目创建问题的链接。当前生成的每个文档或博客页面的链接如下：
View page source：将用户带到您的文档存储库中的页面源代码。 Edit this page：将用户带到页面内容的可编辑版本，位于他们的文档库复刻中（如果有的话）。如果用户没有您的文档库的当前 fork，则在进行编辑之前，将邀请他们创建一个 fork。然后，用户可以为您的文档创建拉取请求。 Create child page：将用户带到在他们的文档库 fork 中创建新文件的表单中。新文件将作为他们单击链接页面的子级位置。该表单将使用一个模板进行预填，用户可以编辑此模板以创建自己的页面。您可以通过将 assets/stubs/new-page-template.md 添加到您自己的项目中来更改此设置。 Create documentation issue：将用户带到一个新的 issue 表单，在其中，当前页面的名称为该问题的标题。 Create project issue（可选）：将用户带到项目仓库中的一个新的issue 表单。如果您有单独的项目和文档存储库，并且您的用户想要针对正在讨论的项目功能提交问题，而不是针对您的文档，那么这可能很有用。 ​	此页面向您展示了如何配置这些链接。
​	目前，Docsy仅支持GitHub存储库链接。由于GitLab可以处理相同的链接方案，因此也应该有效。如果您正在使用其他存储库（例如Bitbucket）并希望生成存储库链接，请随时 add a feature request or update our theme。
链接配置 ​	在 hugo.toml/hugo.yaml/hugo.json 文件中，有四个变量可以配置以设置链接，同时在您的页面元数据中也有一个变量可以配置。
github_repo ​	您站点的源代码仓库的URL。此链接用于生成Edit this page、Create child page和Create documentation issue等链接。
Configuration file: hugo.toml hugo.yaml hugo.json [params] github_repo = &amp;#34;https://github.com/google/docsy&amp;#34; params: github_repo: https://github.com/google/docsy { &amp;#34;params&amp;#34;: { &amp;#34;github_repo&amp;#34;: &amp;#34;https://github.</description></item><item><title>分类支持</title><link>https://t.is-local.org/zh-cn/docs/adding-content/taxonomy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/taxonomy/</guid><description>​	Docsy支持Hugo的分类法（参见：https://gohugo.io/content-management/taxonomies/）用于文档和博客章节。您可以在此页面上查看默认布局，并测试生成的链接行为。
Terminology 术语 ​	要理解分类法的用法，您应理解以下术语：
Taxonomy 分类法
可用于对内容进行分类的类别，例如：标签、分类、项目、人员。
Term 条目
分类法内的关键词，例如：在项目中：项目A、项目B。
Value 值
分配给条目的内容，例如：您站点上的页面，它属于特定的项目
​	在官方Hugo文档中可以找到一个电影站点的分类法示例：https://gohugo.io/content-management/taxonomies/#example-taxonomy-movie-website。
参数 ​	有各种参数来控制项目配置文件中分类法的功能。
​	默认情况下，Hugo 中启用tags和categories的分类法（参见：https://gohugo.io/content-management/taxonomies/#default-taxonomies）。在 Docsy 中，默认情况下在 hugo.toml/hugo.yaml/hugo.json 中禁用分类法：
Configuration file: hugo.toml hugo.yaml hugo.json disableKinds = [&amp;#34;taxonomy&amp;#34;, &amp;#34;taxonomyTerm&amp;#34;] disableKinds: - taxonomy - taxonomyTerm { &amp;#34;disableKinds&amp;#34;: [ &amp;#34;taxonomy&amp;#34;, &amp;#34;taxonomyTerm&amp;#34; ] } ​	如果你想在Docsy中启用分类法，你需要在你的项目的 hugo.toml/hugo.yaml/hugo.json 文件中删除（或注释掉）这一行。然后Hugo将生成 tags 和 categories 的分类法页面。如果你想使用其他分类法，你需要在你的配置文件中定义它们。如果你想同时使用自己的分类法和默认的 tags 和 categories 分类法，你还需要除了你自己的分类法外定义它们。你需要为每个分类法提供复数和单数标签。
​	通过以下示例，你可以定义一个名为 projects 的额外分类法，除了默认的 tags 和 categories 分类法之外：
Configuration file: hugo.</description></item><item><title>图表和公式</title><link>https://t.is-local.org/zh-cn/docs/adding-content/diagrams-and-formulae/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://t.is-local.org/zh-cn/docs/adding-content/diagrams-and-formulae/</guid><description>Docsy内置了对许多图表创建和排版工具的支持，您可以使用这些工具向网站添加丰富的内容，包括（KaTeX），Mermaid，Diagrams.net，PlantUML和MarkMap。
\(\LaTeX\) 支持 \(\KaTeX\) \(\LaTeX\) 是用于制作技术和科学文献的高质量排版系统。由于其出色的数学排版能力, \(\TeX\) 成为科学文件交流和出版的事实标准，特别是如果这些文件包含大量数学公式。最初版本由唐纳德·克努斯（Donald Knuth）设计和编写，于1978年发布。追溯到那么远， \(\LaTeX\) 将“pdf”作为其主要输出目标，并且不是特别适合为 Web 生成 HTML 输出。幸运的是，有了 \(\KaTeX\) 网络上有一个快速且易于使用的 JavaScript 库，用于 \(\TeX\) 数学渲染，该库已集成到 Docsy 主题中。
借助 Docsy 中的 \(\KaTeX\) 支持 [enabled]（#activating-and-configuring-katex-support），您可以将复杂的数学公式包含在您的网页中，无论是内联的还是以自己的行为中心的。由于 \(\KaTeX\) 依赖于服务器端渲染，因此无论您的浏览器或环境如何，它都会生成相同的输出。公式可以内联显示，也可以显示模式：
内联公式 下面的代码示例生成一个包含三个内联公式的文本行：
When \\(a \ne 0\\), there are two solutions to \\(ax^2 + bx + c= 0\\) and they are \\(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\\). When \(a \ne 0\), there are two solutions to \(ax^2 + bx + c= 0\) and they are \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\).</description></item></channel></rss>